name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  validate-html:
    name: Validate HTML
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        npm install -g html-validate
        
    - name: Validate HTML
      run: |
        html-validate index.html
        
  accessibility-check:
    name: Accessibility Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        npm install -g axe-core puppeteer
        
    - name: Run accessibility tests
      run: |
        node -e "
        const puppeteer = require('puppeteer');
        const axe = require('axe-core');
        
        (async () => {
          const browser = await puppeteer.launch();
          const page = await browser.newPage();
          await page.goto('file://' + process.cwd() + '/index.html');
          await page.addScriptTag({path: require.resolve('axe-core')});
          const results = await page.evaluate(() => axe.run());
          await browser.close();
          
          if (results.violations.length > 0) {
            console.error('Accessibility violations found:');
            console.error(JSON.stringify(results.violations, null, 2));
            process.exit(1);
          }
          console.log('No accessibility violations found');
        })();
        "
        
  link-check:
    name: Check External Links
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        npm install -g markdown-link-check
        
    - name: Check links in README
      run: |
        markdown-link-check README.md
        
  security-check:
    name: Security Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run security audit
      run: |
        echo "Checking for security vulnerabilities in dependencies..."
        # This would be more relevant if we had package.json dependencies
        echo "No package.json found - skipping npm audit"
        
  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check file size
      run: |
        echo "Checking file sizes..."
        ls -la *.html
        echo "HTML file size check completed"
        
    - name: Check for common issues
      run: |
        echo "Checking for common issues..."
        if grep -r "TODO\|FIXME\|HACK" . --exclude-dir=.git; then
          echo "Found TODO/FIXME/HACK comments"
          exit 1
        fi
        echo "No TODO/FIXME/HACK comments found" 